<!--
This is example IdP metadata for demonstration purposes. Each party
in a Shibboleth/SAML deployment requires metadata from its opposite(s).
Thus, your metadata describes you and is given to your partners, and your
partners' metadata is fed into your configuration.

This particular file isn't used for anything directly, it's just an example
to help with constructing metadata for an IdP that may not supply its
metadata to you properly.
-->

<EntityDescriptor
    xmlns="urn:oasis:names:tc:SAML:2.0:metadata"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
    xmlns:shibmd="urn:mace:shibboleth:metadata:1.0"
    xsi:schemaLocation="urn:oasis:names:tc:SAML:2.0:metadata saml-schema-metadata-2.0.xsd
                        urn:mace:shibboleth:metadata:1.0 shibboleth-metadata-1.0.xsd
                        urn:oasis:names:tc:SAML:metadata:ui sstc-saml-metadata-ui-v1.0.xsd
                        http://www.w3.org/2000/09/xmldsig# xmldsig-core-schema.xsd"
    validUntil="2020-01-01T00:00:00Z"
    entityID="{{ idp_entity_id }}">
    <!--
    The entityID above looks like a location, but it's actually just a name.
    Each entity is assigned a URI name. By convention, it will often be a
    URL, but it should never contain a physical machine hostname that you
    would not otherwise publish to users of the service. For example, if your
    installation runs on a machine named "gryphon.example.org", you would
    generally register that machine in DNS under a second, logical name
    (such as idp.example.org). This logical name should be used in favor
    of the real hostname when you assign an entityID. You should use a name
    like this even if you don't actually register the server in DNS using it.
    The URL does not have to resolve into anything to use it as a name, although
    it is useful if it does in fact point to your metadata. The key point is
    for the name you choose to be stable, which is why using hostnames is
    generally bad, since they tend to change.
    -->

    <!-- A Shibboleth 1.x and SAML 2.0 IdP contains this element with protocol support as shown. -->
    <IDPSSODescriptor protocolSupportEnumeration="urn:mace:shibboleth:1.0 urn:oasis:names:tc:SAML:1.1:protocol urn:oasis:names:tc:SAML:2.0:protocol">
        <Extensions>
            <!-- This is a Shibboleth extension to express permissible attribute scope(s). -->
            <shibmd:Scope>{{ idp_scope }}</shibmd:Scope>

            <!--
            This is a recent OASIS-defined extension for user-interface material related to the IdP.
            See http://wiki.oasis-open.org/security/SAML2MetadataUI for more details.
            -->
            <mdui:UIInfo xmlns:mdui="urn:oasis:names:tc:SAML:metadata:ui">
                <mdui:DisplayName xml:lang="en">{{ idp_name }}</mdui:DisplayName>
                <mdui:InformationURL xml:lang="en">{{ idp_url }}/info/</mdui:InformationURL>
                <mdui:Logo height="60" width="80" xml:lang="en">{{ idp_url }}/images/dummylogo.png</mdui:Logo>
                <mdui:Logo height="16" width="16" xml:lang="en">{{ idp_url }}/images/favico.png</mdui:Logo>
            </mdui:UIInfo>
        </Extensions>

        <!--
        One or more KeyDescriptors tell your SP how the IdP will authenticate itself. A single
        descriptor can be used for both signing and for server-TLS. You can place an X.509
        certificate directly in this element to specify the public key to use. This only
        reflects the public half of the keypair used by the IdP.
        -->
        <KeyDescriptor>
            <ds:KeyInfo>
                <ds:X509Data>
                    <ds:X509Certificate>
                    MIIDHzCCAgegAwIBAgIUB5fVBd3oq4IBwQJAhA8slXA5DHowDQYJKoZIhvcNAQEL
                    BQAwGDEWMBQGA1UEAwwNMTkyLjE2OC4zMy40NDAeFw0xNjAxMjkwOTUzMDNaFw0x
                    OTAxMjkwOTUzMDNaMBgxFjAUBgNVBAMMDTE5Mi4xNjguMzMuNDQwggEiMA0GCSqG
                    SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCSHkZ7CiYKHYfqcmDoKE7PtlMQMaiuhOFJ
                    qB9o7UcKpY2g4gTm2r0dV2eGW5wbEBNxxtelc+PLO3FzVDA3uh3xZTsSginvPQEg
                    +nulJZmnxOdvhRbaLizyVkTNEcxELxhsTPNeW/u8kg1gvl05fiuHGakddLlQX8K/
                    B8qQcKxIoTN28u9YIfEuKTi61v9eCtJZ8vz98LeUrvALe8y4NQxxZ+Y+BXOwXb4S
                    MVbJ97PF+pqfci+2b8yNs7G52f1qeezgpA7l+KJnoS9AArIuDEfuhZ6PtfWqpbVD
                    p5EIrcoyb0XFqIo6CNagLrE5wfB36suJeAqw5mVVkq1ZKN45jIftAgMBAAGjYTBf
                    MB0GA1UdDgQWBBS/4XqHgHLNV+4LX+LyMGy58yZukTA+BgNVHREENzA1gg0xOTIu
                    MTY4LjMzLjQ0hiRodHRwczovLzE5Mi4xNjguMzMuNDQvaWRwL3NoaWJib2xldGgw
                    DQYJKoZIhvcNAQELBQADggEBADJGcG/e+HQ7KzPoFlaKEl6lYen6vPZf1Xa9+ZA7
                    1xCp4EQJQfZ1KoTdn2kkpTkThcr0WX+Nk9KINp/LSY9by5dqUQRyp98KsOn+DthI
                    KGuwGD4KWovyt9GKU/kvhm0Zvou8nyZFpNmrzcMCQDbEmh9a0ndFFu2T4hGj2bx1
                    L3mgfEcJKYWOXMynWQIdvvxCF6tumtjQyWGI2vTUUoo7DjHRhQwwq+gQTMSBlCyl
                    33Qbfnj1jDMnE+b5ib6w7bSQDI3gKh1YTytDd9DB4DM77+UeAP1NaeQVduwC2/6f
                    0lQuLfBZ20INQAnojbie3CcpbZMoelnT+46UrjgtRKHyceM=
                    </ds:X509Certificate>
                </ds:X509Data>
            </ds:KeyInfo>
        </KeyDescriptor>

        <!-- This tells the SP where/how to resolve SAML 1.x artifacts into SAML assertions. -->
        <ArtifactResolutionService index="1"
            Binding="urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding"
            Location="{{ idp_url }}:8443/idp/profile/saml1/soap/ArtifactResolution"/>

        <!-- This tells the SP where/how to resolve SAML 2.0 artifacts into SAML messages. -->
        <ArtifactResolutionService index="2"
            Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP"
            Location="{{ idp_url }}:8443/idp/profile/SAML2/soap/ArtifactResolution"/>

        <!-- This is informational and communicates what kinds of SAML Subjects the IdP supports. -->
        <NameIDFormat>urn:mace:shibboleth:1.0:nameIdentifier</NameIDFormat>
        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>

        <!-- This tells the SP how and where to request authentication. -->
        <SingleSignOnService Binding="urn:mace:shibboleth:1.0:profiles:AuthnRequest"
            Location="{{ idp_url }}/idp/profile/shibboleth/SSO"/>
        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
            Location="{{ idp_url }}/idp/profile/SAML2/Redirect/SSO"/>
        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
            Location="{{ idp_url }}/id/profile/SAML2/POST/SSO"/>
    </IDPSSODescriptor>

    <!-- Most Shibboleth IdPs also support SAML 1.x attribute queries, so this role is also included. -->
    <AttributeAuthorityDescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:1.1:protocol urn:oasis:names:tc:SAML:2.0:protocol">
        <Extensions>
            <!-- This is a Shibboleth extension to express permissible attribute scope(s). -->
            <shibmd:Scope>{{ idp_scope }}</shibmd:Scope>
        </Extensions>

        <!-- The certificate has to be repeated here (or a different one specified if necessary). -->
        <KeyDescriptor>
            <ds:KeyInfo>
                <ds:X509Data>
                    <ds:X509Certificate>
                    MIIDHzCCAgegAwIBAgIUB5fVBd3oq4IBwQJAhA8slXA5DHowDQYJKoZIhvcNAQEL
                    BQAwGDEWMBQGA1UEAwwNMTkyLjE2OC4zMy40NDAeFw0xNjAxMjkwOTUzMDNaFw0x
                    OTAxMjkwOTUzMDNaMBgxFjAUBgNVBAMMDTE5Mi4xNjguMzMuNDQwggEiMA0GCSqG
                    SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCSHkZ7CiYKHYfqcmDoKE7PtlMQMaiuhOFJ
                    qB9o7UcKpY2g4gTm2r0dV2eGW5wbEBNxxtelc+PLO3FzVDA3uh3xZTsSginvPQEg
                    +nulJZmnxOdvhRbaLizyVkTNEcxELxhsTPNeW/u8kg1gvl05fiuHGakddLlQX8K/
                    B8qQcKxIoTN28u9YIfEuKTi61v9eCtJZ8vz98LeUrvALe8y4NQxxZ+Y+BXOwXb4S
                    MVbJ97PF+pqfci+2b8yNs7G52f1qeezgpA7l+KJnoS9AArIuDEfuhZ6PtfWqpbVD
                    p5EIrcoyb0XFqIo6CNagLrE5wfB36suJeAqw5mVVkq1ZKN45jIftAgMBAAGjYTBf
                    MB0GA1UdDgQWBBS/4XqHgHLNV+4LX+LyMGy58yZukTA+BgNVHREENzA1gg0xOTIu
                    MTY4LjMzLjQ0hiRodHRwczovLzE5Mi4xNjguMzMuNDQvaWRwL3NoaWJib2xldGgw
                    DQYJKoZIhvcNAQELBQADggEBADJGcG/e+HQ7KzPoFlaKEl6lYen6vPZf1Xa9+ZA7
                    1xCp4EQJQfZ1KoTdn2kkpTkThcr0WX+Nk9KINp/LSY9by5dqUQRyp98KsOn+DthI
                    KGuwGD4KWovyt9GKU/kvhm0Zvou8nyZFpNmrzcMCQDbEmh9a0ndFFu2T4hGj2bx1
                    L3mgfEcJKYWOXMynWQIdvvxCF6tumtjQyWGI2vTUUoo7DjHRhQwwq+gQTMSBlCyl
                    33Qbfnj1jDMnE+b5ib6w7bSQDI3gKh1YTytDd9DB4DM77+UeAP1NaeQVduwC2/6f
                    0lQuLfBZ20INQAnojbie3CcpbZMoelnT+46UrjgtRKHyceM=
                    </ds:X509Certificate>
                </ds:X509Data>
            </ds:KeyInfo>
        </KeyDescriptor>

        <!--
        This tells the SP how and where to send queries when SAML 1.x is used.
        The SAML 2.0 version is normally left out because attributes are pushed
        and encrypted during SSO rather than pulled after.
        -->
        <AttributeService Binding="urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding"
            Location="{{ idp_url }}:8443/idp/profiles/saml1/soap/AttributeQuery"/>
        <!--
        <AttributeService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP"
            Location="https://idp.example.org:8443/idp/profiles/SAML2/soap/AttributeQuery"/>
        -->

        <!-- This is informational and communicates what kinds of SAML Subjects the IdP supports. -->
        <NameIDFormat>urn:mace:shibboleth:1.0:nameIdentifier</NameIDFormat>
        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>

    </AttributeAuthorityDescriptor>

    <!--
    This is just information about the entity in human terms.
    For user interface needs, see the new <mdui:UIInfo> extension.
    -->
    <Organization>
        <OrganizationName xml:lang="en">Example Identity Provider</OrganizationName>
        <OrganizationDisplayName xml:lang="en">Identities 'R' Us</OrganizationDisplayName>
        <OrganizationURL xml:lang="en">http://idp.example.org/</OrganizationURL>
    </Organization>
    <ContactPerson contactType="technical">
        <SurName>Technical Support</SurName>
        <EmailAddress>{{ support_email }}</EmailAddress>
    </ContactPerson>

</EntityDescriptor>